package com.osrapi.models.dwarfstar.barbarianprince;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonInclude;

/**
 * 
 * @author drau
 *
 */
@JsonInclude(JsonInclude.Include.NON_EMPTY)
@Entity
@Table(name = "hex_river_crossing", schema = "dwarfstar_barbarian_prince")
public final class HexRiverCrossingEntity {
	/**
	 * the primary key - an autogenerated id (unique for each user in the db).
	 */
	@Id
	@Column(name = "hex_river_crossing_id")
	@GeneratedValue(strategy = GenerationType.AUTO)
	private long id;
	/** the location the road comes from. */
	@Column(name = "hex_river_crossing_from")
	private long from;
	/** the river being crossed. */
	@Column(name = "river_name")
	private String name;
	/** the location the road comes from. */
	@Column(name = "hex_river_crossing_to")
	private long to;
	/** Creates a new instance of {@link HexRiverCrossingEntity}. */
	public HexRiverCrossingEntity() {
		super();
	}
	/**
	 * Creates a new instance of {@link HexRiverCrossingEntity}.
	 * @param i the id
	 * @param t the type
	 * @param n the name
	 * @param x1 the x-coordinates
	 * @param y1 the y-coordinates
	 * @param l the location stored in bit format
	 */
	public HexRiverCrossingEntity(long i, long f, long t) {
		id = i;
		from = f;
		to = t;
	}
	public long getFrom() {
		return from;
	}
	/**
	 * Gets the name of the river being crossed.
	 * @return {@link String}
	 */
	public String getName() {
		return name;
	}
	public long getTo() {
		return to;
	}
	/**
	 * @param from the from to set
	 */
	public void setFrom(long f) {
		this.from = f;
	}
	/**
	 * @param id the id to set
	 */
	public void setId(long id) {
		this.id = id;
	}
	/**
	 * Sets the river name.
	 * @param val the name to set
	 */
	public void setName(final String val) {
		this.name = val;
	}
}
