package com.osrapi.models;

import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

import com.fasterxml.jackson.annotation.JsonInclude;

/**
 * @author drau
 */
@JsonInclude(JsonInclude.Include.NON_EMPTY)
@Entity
@Table(name = "condition", schema = "dwarfstar_barbarian_prince")
public final class ConditionEntity {
	/**
	 * the primary key - an autogenerated id (unique for each user in the db).
	 */
	@Id
	@Column(name = "condition_id")
	@GeneratedValue(strategy = GenerationType.AUTO)
	private long id;
	/** the list of locations to this condition. */
	@OneToMany(targetEntity = HexLocationEntity.class,
			fetch = FetchType.EAGER)
	@Fetch(FetchMode.SELECT)
	@JoinTable(name = "condition_location_lookup",
	schema = "dwarfstar_barbarian_prince",
	joinColumns = @JoinColumn(name = "condition_id",
	referencedColumnName = "condition_id"),
	inverseJoinColumns = @JoinColumn(name = "hex_location_id",
	referencedColumnName = "hex_location_id"))
	private List<HexLocationEntity> locations;
	/** the list of rolls for this condition. */
	@OneToMany(targetEntity = RollEntity.class,
			fetch = FetchType.EAGER)
	@Fetch(FetchMode.SELECT)
	@JoinTable(name = "condition_roll_lookup",
	schema = "dwarfstar_barbarian_prince",
	joinColumns = @JoinColumn(name = "condition_id",
	referencedColumnName = "condition_id"),
	inverseJoinColumns = @JoinColumn(name = "roll_id",
	referencedColumnName = "roll_id"))
	private List<RollEntity> rolls;
	/** the sub event name. */
	@NotNull
	private String name;
	/** the condition type. */
	@Column(name = "condition_type_id", nullable = false)
	private long type;

	// Public methods
	/** Creates a new instance of {@link ConditionEntity}. */
	public ConditionEntity() {
		super();
	}
	/**
	 * Creates a new instance of {@link ConditionEntity}.
	 * @param n the name
	 * @param t the type
	 */
	public ConditionEntity(final String n, final long t) {
		name = n;
		type = t;
	}
	/**
	 * Gets the id.
	 * @return {@link long}
	 */
	public long getId() {
		return id;
	}
	/**
	 * Gets the list of locations tied to this condition.
	 * @return {@link List}<{@link HexLocationEntity}>
	 */
	public List<HexLocationEntity> getLocations() {
		return locations;
	}
	/**
	 * Gets the name.
	 * @return {@link String}
	 */
	public String getName() {
		return name;
	}
	/**
	 * Gets the list of rolls.
	 * @return {@link List}<{@link RollEntity}>
	 */
	public List<RollEntity> getRolls() {
		return rolls;
	}
	/**
	 * Gets the type.
	 * @return {@link long}
	 */
	public long getType() {
		return type;
	}
	/**
	 * Sets the id.
	 * @param val the new value
	 */
	public void setId(final long val) {
		id = val;
	}
	/**
	 * Sets the list of locations tied to this entity.
	 * @param list the locations to set
	 */
	public void setLocations(final List<HexLocationEntity> list) {
		locations = list;
	}
	/**
	 * Sets the name.
	 * @param val the new value
	 */
	public void setName(final String val) {
		name = val;
	}
	/**
	 * Sets the list of rolls.
	 * @param list the new value
	 */
	public void setRolls(final List<RollEntity> list) {
		rolls = list;
	}
	/**
	 * Sets the type.
	 * @param val the new value
	 */
	public void setType(final long val) {
		type = val;
	}
}
