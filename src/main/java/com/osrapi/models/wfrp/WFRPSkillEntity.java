package com.osrapi.models.wfrp;

import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * @author drau
 */
@JsonInclude(JsonInclude.Include.NON_EMPTY)
@Entity
@Table(name = "skill", schema = "wfrp")
public final class WFRPSkillEntity {
	/** the skill's type. */
	@OneToOne(cascade = CascadeType.ALL,
			targetEntity = WFRPSkillTypeEntity.class, fetch = FetchType.EAGER)
	@Fetch(FetchMode.SELECT)
	@JoinColumn(name = "skill_type_id",
	referencedColumnName = "skill_type_id")
	private WFRPSkillTypeEntity			type;
	/** the description. */
	@NotNull
	private String							description;
	/** the full name. */
	@NotNull
	@Column(name = "full_name")
	@JsonProperty("full_name")
	private String							fullName;
	/**
	 * the primary key - an autogenerated id (unique for each user in the db).
	 */
	@Id
	@Column(name = "talent_id")
	@GeneratedValue(strategy = GenerationType.AUTO)
	private long							id;
	/** the IQ cost. */
	@Column(name = "iq_cost")
	@JsonProperty("iq_cost")
	@NotNull
	private Long							iqCost;
	/** the IQ level. */
	@Column(name = "iq_level")
	@JsonProperty("iq_level")
	@NotNull
	private Long							iqLevel;
	/** the flag indicating the talent has a penalty for wizards. */
	@Column(name = "wizard_penalty")
	@JsonProperty("wizard_penalty")
	@NotNull
	private Boolean							penalty;
	/** the list of requirements. */
	@OneToMany(targetEntity = TalentPrerequisiteEntity.class,
			fetch = FetchType.EAGER)
	@Fetch(FetchMode.SELECT)
	@JoinTable(name = "talent_requirement", schema = "the_fantasy_trip",
	joinColumns = @JoinColumn(name = "talent_id",
	referencedColumnName = "talent_id"),
	inverseJoinColumns = @JoinColumn(name = "talent_prerequisite_id",
	referencedColumnName = "talent_prerequisite_id"))
	private List<TalentPrerequisiteEntity>	requirements;
	/** the short name. */
	@NotNull
	@Column(name = "short_name")
	@JsonProperty("short_name")
	private String							shortName;
	/** Creates a new instance of {@link WFRPSkillEntity}. */
	public WFRPSkillEntity() {
		super();
	}
	/**
	 * Gets the talent category.
	 * @return {@link CharacterTypeEntity}
	 */
	public TalentCategoryEntity getCategory() {
		return type;
	}
	/**
	 * Gets the description.
	 * @return {@link String}
	 */
	public String getDescription() {
		return description;
	}
	/**
	 * Gets the full name.
	 * @return {@link String}
	 */
	public String getFullName() {
		return fullName;
	}
	/**
	 * Gets the id.
	 * @return {@link long}
	 */
	public long getId() {
		return id;
	}
	/**
	 * Gets the IQ cost.
	 * @return {@link Long}
	 */
	public Long getIqCost() {
		return iqCost;
	}
	/**
	 * Gets the IQ level.
	 * @return {@link Long}
	 */
	public Long getIqLevel() {
		return iqLevel;
	}
	/**
	 * Gets the penalty.
	 * @return {@link Long}
	 */
	public Boolean getPenalty() {
		return penalty;
	}
	/**
	 * Get the list of requirements.
	 * @return {@link List}<{@link TalentPrerequisiteEntity}>
	 */
	public List<TalentPrerequisiteEntity> getRequirements() {
		return requirements;
	}
	/**
	 * Gets the short name.
	 * @return {@link String}
	 */
	public String getShortName() {
		return shortName;
	}
	/**
	 * Sets the talent category.
	 * @param val the new value
	 */
	public void setCategory(final TalentCategoryEntity val) {
		type = val;
	}
	/**
	 * Sets the description.
	 * @param val the new value
	 */
	public void setDescription(final String val) {
		description = val;
	}
	/**
	 * Sets the full name.
	 * @param val the new value
	 */
	public void setFullName(final String val) {
		fullName = val;
	}
	/**
	 * Sets the id.
	 * @param val the new value
	 */
	public void setId(final long val) {
		id = val;
	}
	/**
	 * Sets the IQ cost.
	 * @param val the value to set
	 */
	public void setIqCost(final long val) {
		iqCost = val;
	}
	/**
	 * Sets the IQ level.
	 * @param val the value to set
	 */
	public void setIqLevel(final long val) {
		iqLevel = val;
	}
	/**
	 * Sets the penalty.
	 * @param val the value to set
	 */
	public void setPenalty(final boolean val) {
		penalty = val;
	}
	/**
	 * Sets the list of requirements.
	 * @param val the requirements to set
	 */
	public void setRequirements(final List<TalentPrerequisiteEntity> val) {
		requirements = val;
	}
	/**
	 * Sets the short name.
	 * @param val the new value
	 */
	public void setShortName(final String val) {
		shortName = val;
	}
}
